name: Windows X64

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        image: [windows-2022]
        compiler: ["Visual Studio", "ClangCL", "clang"]
        cxx: [20, 23]
      fail-fast: false
    name: ${{ matrix.compiler }} (C++${{ matrix.cxx }})
    runs-on: ${{ matrix.image }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install ninja
        run: choco install ninja

      - name: Set up Visual Studio shell
        if: matrix.compiler != 'clang'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: CMake configure
        if: matrix.compiler == 'Visual Studio'
        run: >
          cmake -S .
          -B build
          -G "Ninja Multi-Config"
          -D CMAKE_CXX_STANDARD=${{ matrix.cxx }}
          -D TETL_BUILD_WERROR=ON

      - name: CMake configure
        if: (matrix.compiler == 'ClangCL') && (matrix.image == 'windows-2019')
        run: >
          cmake -S .
          -B build
          -G "Visual Studio 16 2019"
          -T ClangCL
          -D CMAKE_CXX_STANDARD=${{ matrix.cxx }}
          -D TETL_BUILD_WERROR=ON

      - name: CMake configure
        if: (matrix.compiler == 'ClangCL') && (matrix.image == 'windows-2022')
        run: >
          cmake -S .
          -B build
          -G "Visual Studio 17 2022"
          -T ClangCL
          -D CMAKE_CXX_STANDARD=${{ matrix.cxx }}
          -D TETL_BUILD_WERROR=ON

      - name: CMake configure
        if: matrix.compiler == 'clang'
        run: >
          cmake -S .
          -B build
          -G "Ninja Multi-Config"
          -D CMAKE_C_COMPILER=clang
          -D CMAKE_CXX_COMPILER=clang++
          -D CMAKE_CXX_STANDARD=${{ matrix.cxx }}
          -D TETL_BUILD_WERROR=ON

      - name: CMake build -- Debug
        run: cmake --build build --config "Debug" --parallel 2

      - name: Run tests -- Debug
        run: ctest --test-dir build -C Debug --output-on-failure

      - name: CMake build -- Release
        run: cmake --build build --config "Release" --parallel 2

      - name: Run tests -- Release
        run: ctest --test-dir build -C Release --output-on-failure
