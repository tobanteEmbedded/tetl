name: Linux

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        config:
          [
            { cc: gcc-12, cxx: g++-12 },
            { cc: gcc-13, cxx: g++-13 },
            { cc: gcc-14, cxx: g++-14 },
            { cc: clang-17, cxx: clang++-17 },
            { cc: clang-18, cxx: clang++-18 },
            { cc: clang-19, cxx: clang++-19 },
            { cc: clang-20, cxx: clang++-20 },
          ]
        cxx_std: [20, 23]
      fail-fast: false
    runs-on: ubuntu-24.04
    name: ${{ matrix.config.cc }} (C++${{ matrix.cxx_std }})
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Update APT
        run: sudo apt update -y

      - name: Install clang-19
        if: matrix.config.cc == 'clang-19'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19 all

      - name: Install clang-20
        if: matrix.config.cc == 'clang-20'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20 all

      - name: CMake configure
        run: >
          cmake -S .
          -B build
          -G "Ninja Multi-Config"
          -D CMAKE_C_COMPILER=${{ matrix.config.cc }}
          -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
          -D CMAKE_CXX_STANDARD=${{ matrix.cxx_std }}
          -D CMAKE_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined -fno-sanitize-recover=undefined"
          -D CMAKE_EXE_LINKER_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined -fno-sanitize-recover=undefined"
          -D CMAKE_COMPILE_WARNING_AS_ERROR=ON

      - name: CMake build -- Debug
        run: cmake --build build --config Debug

      - name: Run all tests -- Debug
        run: ctest --test-dir build -C Debug --output-on-failure

      - name: CMake build -- Release
        run: cmake --build build --config Release

      - name: Run all tests -- Release
        run: ctest --test-dir build -C Release --output-on-failure
