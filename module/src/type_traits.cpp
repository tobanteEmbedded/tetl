module;

#include <etl/type_traits.hpp>

export module etl.type_traits;

export namespace etl {

using etl::add_const;
using etl::add_const_t;
using etl::add_cv;
using etl::add_cv_t;
using etl::add_lvalue_reference;
using etl::add_lvalue_reference_t;
using etl::add_pointer;
using etl::add_pointer_t;
using etl::add_rvalue_reference;
using etl::add_rvalue_reference_t;
using etl::add_volatile;
using etl::add_volatile_t;
using etl::aligned_storage;
using etl::aligned_storage_t;
using etl::aligned_union;
using etl::aligned_union_t;
using etl::alignment_of;
using etl::alignment_of_v;
using etl::basic_common_reference;
using etl::bool_constant;
using etl::common_reference;
using etl::common_reference_t;
using etl::common_type;
using etl::common_type_t;
using etl::conditional;
using etl::conditional_t;
using etl::conjunction;
using etl::conjunction_v;
using etl::decay;
using etl::decay_t;
using etl::declval;
using etl::disjunction;
using etl::disjunction_v;
using etl::enable_if;
using etl::enable_if_t;
using etl::extent;
using etl::extent_v;
using etl::false_type;
using etl::has_unique_object_representations;
using etl::has_unique_object_representations_v;
using etl::has_virtual_destructor;
using etl::has_virtual_destructor_v;
using etl::integral_constant;
using etl::invoke_result;
using etl::invoke_result_t;
using etl::is_abstract;
using etl::is_abstract_v;
using etl::is_aggregate;
using etl::is_aggregate_v;
using etl::is_arithmetic;
using etl::is_arithmetic_v;
using etl::is_array;
using etl::is_array_v;
using etl::is_assignable;
using etl::is_assignable_v;
using etl::is_base_of;
using etl::is_base_of_v;
using etl::is_bounded_array;
using etl::is_bounded_array_v;
using etl::is_class;
using etl::is_class_v;
using etl::is_compound;
using etl::is_compound_v;
using etl::is_const;
using etl::is_const_v;
using etl::is_constant_evaluated;
using etl::is_constructible;
using etl::is_constructible_v;
using etl::is_convertible;
using etl::is_convertible_v;
using etl::is_copy_assignable;
using etl::is_copy_assignable_v;
using etl::is_copy_constructible;
using etl::is_copy_constructible_v;
using etl::is_default_constructible;
using etl::is_default_constructible_v;
using etl::is_destructible;
using etl::is_destructible_v;
using etl::is_empty;
using etl::is_empty_v;
using etl::is_enum;
using etl::is_enum_v;
using etl::is_final;
using etl::is_final_v;
using etl::is_floating_point;
using etl::is_floating_point_v;
using etl::is_function;
using etl::is_function_v;
using etl::is_fundamental;
using etl::is_fundamental_v;
using etl::is_integral;
using etl::is_integral_v;
using etl::is_invocable;
using etl::is_invocable_r;
using etl::is_invocable_r_v;
using etl::is_invocable_v;
using etl::is_lvalue_reference;
using etl::is_lvalue_reference_v;
using etl::is_member_function_pointer;
using etl::is_member_function_pointer_v;
using etl::is_member_object_pointer;
using etl::is_member_object_pointer_v;
using etl::is_member_pointer;
using etl::is_member_pointer_v;
using etl::is_move_assignable;
using etl::is_move_assignable_v;
using etl::is_move_constructible;
using etl::is_move_constructible_v;
using etl::is_nothrow_assignable;
using etl::is_nothrow_assignable_v;
using etl::is_nothrow_constructible;
using etl::is_nothrow_constructible_v;
using etl::is_nothrow_convertible;
using etl::is_nothrow_convertible_v;
using etl::is_nothrow_copy_assignable;
using etl::is_nothrow_copy_assignable_v;
using etl::is_nothrow_copy_constructible;
using etl::is_nothrow_copy_constructible_v;
using etl::is_nothrow_default_constructible;
using etl::is_nothrow_default_constructible_v;
using etl::is_nothrow_destructible;
using etl::is_nothrow_destructible_v;
using etl::is_nothrow_move_assignable;
using etl::is_nothrow_move_assignable_v;
using etl::is_nothrow_move_constructible;
using etl::is_nothrow_move_constructible_v;
using etl::is_nothrow_swappable;
using etl::is_nothrow_swappable_v;
using etl::is_nothrow_swappable_with;
using etl::is_nothrow_swappable_with_v;
using etl::is_null_pointer;
using etl::is_null_pointer_v;
using etl::is_object;
using etl::is_object_v;
using etl::is_pointer;
using etl::is_pointer_v;
using etl::is_polymorphic;
using etl::is_polymorphic_v;
using etl::is_reference;
using etl::is_reference_v;
using etl::is_rvalue_reference;
using etl::is_rvalue_reference_v;
using etl::is_same;
using etl::is_same_v;
using etl::is_scalar;
using etl::is_scalar_v;
using etl::is_scoped_enum;
using etl::is_scoped_enum_v;
using etl::is_signed;
using etl::is_signed_v;
using etl::is_standard_layout;
using etl::is_standard_layout_v;
using etl::is_swappable;
using etl::is_swappable_v;
using etl::is_swappable_with;
using etl::is_swappable_with_v;
using etl::is_trivial;
using etl::is_trivial_v;
using etl::is_trivially_assignable;
using etl::is_trivially_assignable_v;
using etl::is_trivially_constructible;
using etl::is_trivially_constructible_v;
using etl::is_trivially_copy_assignable;
using etl::is_trivially_copy_assignable_v;
using etl::is_trivially_copy_constructible;
using etl::is_trivially_copy_constructible_v;
using etl::is_trivially_copyable;
using etl::is_trivially_copyable_v;
using etl::is_trivially_default_constructible;
using etl::is_trivially_default_constructible_v;
using etl::is_trivially_destructible;
using etl::is_trivially_destructible_v;
using etl::is_trivially_move_assignable;
using etl::is_trivially_move_assignable_v;
using etl::is_trivially_move_constructible;
using etl::is_trivially_move_constructible_v;
using etl::is_unbounded_array;
using etl::is_unbounded_array_v;
using etl::is_union;
using etl::is_union_v;
using etl::is_unsigned;
using etl::is_unsigned_v;
using etl::is_void;
using etl::is_void_v;
using etl::is_volatile;
using etl::is_volatile_v;
using etl::make_signed;
using etl::make_signed_t;
using etl::make_unsigned;
using etl::make_unsigned_t;
using etl::negation;
using etl::negation_v;
using etl::rank;
using etl::rank_v;
using etl::remove_all_extents;
using etl::remove_all_extents_t;
using etl::remove_const;
using etl::remove_const_t;
using etl::remove_cv;
using etl::remove_cv_t;
using etl::remove_cvref;
using etl::remove_cvref_t;
using etl::remove_extent;
using etl::remove_extent_t;
using etl::remove_pointer;
using etl::remove_pointer_t;
using etl::remove_reference;
using etl::remove_reference_t;
using etl::remove_volatile;
using etl::remove_volatile_t;
using etl::true_type;
using etl::type_identity;
using etl::type_identity_t;
using etl::underlying_type;
using etl::underlying_type_t;
using etl::unwrap_ref_decay;
using etl::unwrap_ref_decay_t;
using etl::unwrap_reference;
using etl::unwrap_reference_t;
using etl::void_t;

// Non-standard extensions
using etl::is_builtin_integer;
using etl::is_builtin_integer_v;
using etl::is_builtin_signed_integer;
using etl::is_builtin_signed_integer_v;
using etl::is_builtin_unsigned_integer;
using etl::is_builtin_unsigned_integer_v;
using etl::is_specialized;
using etl::is_specialized_v;

} // namespace etl
